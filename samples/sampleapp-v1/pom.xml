<project 
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	>

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.brienwheeler.sampleapp</groupId>
    <artifactId>pom-root</artifactId>
    <version>v1</version>
    <packaging>pom</packaging>

	<developers>
		<developer>
			<name>Brien Wheeler</name>
			<email>brienwheeler@yahoo.com</email>
		</developer>
	</developers>

    <modules>
    	<module>apps</module>
    </modules>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<version.plugin.aspectj-maven>1.11</version.plugin.aspectj-maven>
		<version.plugin.cobertura-maven>2.7</version.plugin.cobertura-maven>
		<version.plugin.javascript-maven>2.0.0-alpha-1</version.plugin.javascript-maven>
		<version.plugin.jslint-maven>1.0.1</version.plugin.jslint-maven>
		<version.plugin.tomcat-maven>1.1</version.plugin.tomcat-maven>
		<version.plugin.maven-assembly>2.4</version.plugin.maven-assembly>
		<version.plugin.maven-clean>2.4.1</version.plugin.maven-clean>
		<version.plugin.maven-compiler>2.3.2</version.plugin.maven-compiler>
		<version.plugin.maven-install>2.3.1</version.plugin.maven-install>
		<version.plugin.maven-jar>2.3.2</version.plugin.maven-jar>
		<version.plugin.maven-surefire>2.10</version.plugin.maven-surefire>
		<version.plugin.maven-war>2.1.1</version.plugin.maven-war>

		<version.junit>4.8.1</version.junit>
		<version.servlet-api>2.5</version.servlet-api>
	</properties>

	<dependencies>
	
		<!--
		   - Test dependencies
		   -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>
    
	<!--
	   - Version definitions for all sub-project dependencies 
	   -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${version.servlet-api}</version>
			</dependency>
			
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<!--
	   - Common build definitions for all modules.  Mostly plugin version
	   - specifications and configurations. 
	   -->
    <build>
    
	    <pluginManagement>
	    	<plugins>
	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.plugin.maven-assembly}</version>
				</plugin>
				
	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.plugin.maven-clean}</version>
				</plugin>
				
	    		<!-- Pin plugin version -->
	    		<!-- Configure for Java version specified above in properties -->
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-compiler-plugin</artifactId>
		            <version>${version.plugin.maven-compiler}</version>
		            <configuration>
		                <source>${maven.compiler.source}</source>
		                <target>${maven.compiler.target}</target>
		            </configuration>
		        </plugin>
	
	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.plugin.maven-install}</version>
				</plugin>
				
	    		<!-- Pin plugin version -->
	    		<!-- Configure plugin to build separate JAR for test classes and resources -->
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-jar-plugin</artifactId>
		            <version>${version.plugin.maven-jar}</version>
		            <executions>
		                <execution>
		                    <goals>
		                        <goal>test-jar</goal>
		                    </goals>
		                </execution>
		            </executions>
		        </plugin>
	
	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.plugin.maven-surefire}</version>
				</plugin>
				
	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.plugin.maven-war}</version>
				</plugin>
				
	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>aspectj-maven-plugin</artifactId>
					<version>${version.plugin.aspectj-maven}</version>
				</plugin>

	    		<!-- Pin plugin version -->
	    		<!-- Configure plugin to create rolled up coverage report for multimodule projects -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${version.plugin.cobertura-maven}</version>
					<configuration>
						<aggregate>true</aggregate>
					</configuration>
				</plugin>

	    		<!-- Pin plugin version -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>${version.plugin.tomcat-maven}</version>
				</plugin>

	    		<!-- Pin plugin version -->
	    		<!--
	    		   - Configure m2e Eclipse integration to allow AspectJ plugin to run on all builds
	    		   - (the AspectJ plugin still needs to be included in the specific module POM file).
	    		   -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[${version.plugin.aspectj-maven},)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

    </build>

</project>
